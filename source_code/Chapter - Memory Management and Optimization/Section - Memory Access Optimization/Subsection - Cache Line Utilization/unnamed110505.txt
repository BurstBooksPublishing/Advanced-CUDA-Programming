__global__ void cacheLineOptimizationKernel(float* input, float* output, int N) {
    int idx = blockIdx.x * blockDim.x + threadIdx.x;
    float sum = 0.0f;

    // Ensure memory access is coalesced and cache lines are fully utilized
    for (int i = 0; i < N; i += blockDim.x * gridDim.x) {
        int loadIdx = idx + i;
        if (loadIdx < N) {
            sum += input[loadIdx];  // Coalesced memory access
        }
    }

    // Store the result in global memory
    if (idx < N) {
        output[idx] = sum;  // Coalesced memory write
    }
}