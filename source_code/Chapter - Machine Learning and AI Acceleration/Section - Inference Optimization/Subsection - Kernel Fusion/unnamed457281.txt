__global__ void fusedKernel(float* input, float* weights, float* output, int N) {
    int idx = blockIdx.x * blockDim.x + threadIdx.x;
    if (idx < N) {
        // Perform element-wise multiplication and accumulation
        float sum = 0.0f;
        for (int i = 0; i < N; ++i) {
            sum += input[i] * weights[idx * N + i];
        }
        // Apply activation function (ReLU)
        output[idx] = fmaxf(0.0f, sum);
    }
}